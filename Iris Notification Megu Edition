local NotificationTable = {};

local NotificationFolder = Instance.new("Folder");

NotificationTable.CreateNotification = function(TitleData, Text, Image)
	
	if shared then
		if (game:GetService("CoreGui"):FindFirstChild("NotificationFolder")) then
			NotificationFolder = game:GetService("CoreGui"):FindFirstChild("NotificationFolder");
		else
			NotificationFolder.Name = "NotificationFolder"
			NotificationFolder.Parent = game:GetService("CoreGui");
		end
	else
		if (game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("NotificationFolder")) then
			NotificationFolder = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("NotificationFolder");
		else
			NotificationFolder.Name = "NotificationFolder"
			NotificationFolder.Parent = game:GetService("Players").LocalPlayer.PlayerGui;
		end
	end
	
	local Notification = Instance.new("ScreenGui")
	local _Template = Instance.new("Frame")
	local Icon = Instance.new("ImageLabel")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local Title = Instance.new("TextLabel")
	local Count = Instance.new("TextLabel")
	local TextLabel = Instance.new("TextLabel")
	local UICorner = Instance.new("UICorner")
	local UICorner2 = Instance.new("UICorner")
	local Frame = Instance.new("Frame")
	local UIGradient = Instance.new("UIGradient")
    local Length = Instance.new("NumberValue",_Template)
    local Hiding = Instance.new("BoolValue",_Template)

	Notification.Name = "Notification"
	Notification.Parent = NotificationFolder
	Notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Notification.Enabled = true;

	_Template.Name = "_Template"
	_Template.Parent = Notification
	_Template.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	_Template.BackgroundTransparency = 0.050
	_Template.BorderColor3 = Color3.fromRGB(255, 255, 255)
	_Template.Position = UDim2.new(0.713929176, 0, 0.587826073, 0)
	_Template.Size = UDim2.new(0, 270, 0, 64)
	_Template.ZIndex = 9

	Icon.Name = "Icon"
	Icon.Parent = _Template
	Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Icon.BackgroundTransparency = 1.000
	Icon.Position = UDim2.new(0.0277603213, 0, 0.182097465, 0)
	Icon.Size = UDim2.new(0, 40, 0, 40)
	Icon.Image = Image

	UIAspectRatioConstraint.Parent = Icon

	Title.Name = "Title"
	Title.Parent = _Template
	Title.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0, 63, 0, 2)
	Title.Size = UDim2.new(0, 129, 0, 21)
	Title.Font = Enum.Font.SourceSansBold
	Title.Text = TitleData
	Title.TextColor3 = Color3.fromRGB(240, 240, 240)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left

	Count.Name = "Title"
	Count.Parent = _Template
	Count.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
	Count.BackgroundTransparency = 1.000
	Count.Position = UDim2.new(0, 230, 0, 20)
	Count.Size = UDim2.new(0, 35, 0, 21)
	Count.Font = Enum.Font.SourceSansBold
	Count.TextColor3 = Color3.fromRGB(240, 240, 240)
	Count.TextScaled = true
	Count.TextSize = 14.000
	Count.TextWrapped = true
	Count.TextXAlignment = Enum.TextXAlignment.Left
	Count.Text = '5'
	
	Length.Changed:Connect(function()
	    local num = tostring(Length.Value):split(".")
	    Count.Text = num[1].."."..num[2]:sub(1,2)
	end)
	
	TextLabel.Parent = _Template
	TextLabel.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Position = UDim2.new(0, 63, 0, 23)
	TextLabel.Size = UDim2.new(0, 178, 0, 35)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.Text = Text.."\n  - Notification By Iris"
	TextLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel.TextYAlignment = Enum.TextYAlignment.Top

	UICorner.Parent = _Template

	Frame.Parent = _Template
	Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.01, 0, 0.9, 0)
	Frame.Size = UDim2.new(0, 265, 0, 4.25)
    Frame.BackgroundColor3 = Color3.new(0,1,0)
    
    Hiding.Name = "Hiding"
    Length.Name = "Length"
    UICorner2.Parent = Frame
	UIGradient.Parent = Frame
	
	return _Template;
end


shared.ChildRemoved = NotificationFolder.ChildRemoved:Connect(function()
	local TweenService = game:GetService("TweenService");

	local TweenInfData = TweenInfo.new(0.25);
	for _, NotificationObject in next, NotificationFolder:GetChildren() do
		local Notification = NotificationObject["_Template"];
		if Notification.Hiding.Value == false then
    		TweenService:Create(Notification, TweenInfData, {
    			Position = UDim2.new(1, -280, 1, Notification.Position.Y.Offset + 68 + 1);
    		}):Play();
		end
	end

end)

NotificationTable.InsertNotification = function(Notification,duration)

	local TweenService = game:GetService("TweenService");
	
	local ShowPosition = UDim2.new(1, -280, 1, -70 * #NotificationFolder:GetChildren() - 1);
	local HidePosition = UDim2.new(1, 70, 1, -70);
	
	Notification.Position = HidePosition;
	Notification.Visible = true;
	
	Notification.Length.Value = duration + 0.25
	
	local TweenInfData = TweenInfo.new(0.25);
	TweenService:Create(Notification, TweenInfData, {
		Position = ShowPosition
	}):Play();
	wait(TweenInfData.Time);
	TweenService:Create(Notification.Frame, TweenInfo.new(tonumber(duration)), {
		Size = UDim2.new(0, 0, 0, 4.25),
		BackgroundColor3 = Color3.new(1,0,0)
	}):Play();
	TweenService:Create(Notification.Length, TweenInfo.new(tonumber(duration+0.25)), {
		Value = 0,
	}):Play();
	wait(tonumber(duration)+0.25)
	TweenService:Create(Notification, TweenInfData, {
		Position = HidePosition
	}):Play();
	Notification.Length.Value = 0
	wait(TweenInfData.Time);
	
	Notification.Parent:Destroy();
end

NotificationTable.Notify = function(...)
    	local Args = {...};
    
    	assert(#Args < 5, "Error: Too many arguments for Notify | Expected 4");
    
    	for Index,Argument in next, Args do
    		Args[Index] = tostring(Argument);
    	end
    	
    	local NotifFrame = NotificationTable.CreateNotification(Args[1], Args[2], Args[3]);
    	
    	if Args[4] == nil then
    	    Args[4] = 5    
    	end
    	   
    	NotificationTable.InsertNotification(NotifFrame,Args[4]);
end

return NotificationTable;
